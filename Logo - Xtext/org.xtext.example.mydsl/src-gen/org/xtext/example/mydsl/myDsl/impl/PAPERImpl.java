/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.PAPER;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>PAPER</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.PAPERImpl#getSizeX <em>Size X</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.PAPERImpl#getSizeY <em>Size Y</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.PAPERImpl#getPaperColour <em>Paper Colour</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PAPERImpl extends CMDImpl implements PAPER
{
  /**
   * The default value of the '{@link #getSizeX() <em>Size X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSizeX()
   * @generated
   * @ordered
   */
  protected static final int SIZE_X_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSizeX() <em>Size X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSizeX()
   * @generated
   * @ordered
   */
  protected int sizeX = SIZE_X_EDEFAULT;

  /**
   * The default value of the '{@link #getSizeY() <em>Size Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSizeY()
   * @generated
   * @ordered
   */
  protected static final int SIZE_Y_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSizeY() <em>Size Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSizeY()
   * @generated
   * @ordered
   */
  protected int sizeY = SIZE_Y_EDEFAULT;

  /**
   * The default value of the '{@link #getPaperColour() <em>Paper Colour</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPaperColour()
   * @generated
   * @ordered
   */
  protected static final String PAPER_COLOUR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPaperColour() <em>Paper Colour</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPaperColour()
   * @generated
   * @ordered
   */
  protected String paperColour = PAPER_COLOUR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PAPERImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.PAPER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getSizeX()
  {
    return sizeX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSizeX(int newSizeX)
  {
    int oldSizeX = sizeX;
    sizeX = newSizeX;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PAPER__SIZE_X, oldSizeX, sizeX));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getSizeY()
  {
    return sizeY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSizeY(int newSizeY)
  {
    int oldSizeY = sizeY;
    sizeY = newSizeY;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PAPER__SIZE_Y, oldSizeY, sizeY));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPaperColour()
  {
    return paperColour;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPaperColour(String newPaperColour)
  {
    String oldPaperColour = paperColour;
    paperColour = newPaperColour;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PAPER__PAPER_COLOUR, oldPaperColour, paperColour));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.PAPER__SIZE_X:
        return getSizeX();
      case MyDslPackage.PAPER__SIZE_Y:
        return getSizeY();
      case MyDslPackage.PAPER__PAPER_COLOUR:
        return getPaperColour();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.PAPER__SIZE_X:
        setSizeX((Integer)newValue);
        return;
      case MyDslPackage.PAPER__SIZE_Y:
        setSizeY((Integer)newValue);
        return;
      case MyDslPackage.PAPER__PAPER_COLOUR:
        setPaperColour((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PAPER__SIZE_X:
        setSizeX(SIZE_X_EDEFAULT);
        return;
      case MyDslPackage.PAPER__SIZE_Y:
        setSizeY(SIZE_Y_EDEFAULT);
        return;
      case MyDslPackage.PAPER__PAPER_COLOUR:
        setPaperColour(PAPER_COLOUR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PAPER__SIZE_X:
        return sizeX != SIZE_X_EDEFAULT;
      case MyDslPackage.PAPER__SIZE_Y:
        return sizeY != SIZE_Y_EDEFAULT;
      case MyDslPackage.PAPER__PAPER_COLOUR:
        return PAPER_COLOUR_EDEFAULT == null ? paperColour != null : !PAPER_COLOUR_EDEFAULT.equals(paperColour);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (sizeX: ");
    result.append(sizeX);
    result.append(", sizeY: ");
    result.append(sizeY);
    result.append(", paperColour: ");
    result.append(paperColour);
    result.append(')');
    return result.toString();
  }

} //PAPERImpl
